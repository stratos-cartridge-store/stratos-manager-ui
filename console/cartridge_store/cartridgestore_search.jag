<%
var log = new Log();
//define errors
var error = [];
//encoding for Basic Auth
var sso = require("sso");

var assets;

//include basic auth base configs
include('cartridgestore_include.jag');

//get parameters by request
var cstart = request.getParameter('start'),
	ccount = request.getParameter('count'),
	csortBy = request.getParameter('sortBy'),
	csortOrder = request.getParameter('sortOrder'),
	csearchString = request.getParameter('search');

var data={start:cstart, count:ccount, sortOrder: csortOrder, sortBy: csortBy};

//check if anything goes wrong
if(csearchString==''){

	//load initial cartridge data
	try{
		var assetJSON = get(apiUrl+'/store/apis/v2/assets/cartridge/', data, header);
		if(assetJSON.xhr.status == '401'){
			log.error( "Store Error: Unauthorized access to Cartridge Store");
			error.push({"errorMessage":"Unauthorized access to Cartridge Store"});
		}else{
			//fixing any tab issues encounter
			var tabfix = assetJSON.data.replace(/\t/g, '');
			//adding URL to JSON data
			var urlfix = tabfix.replace(/\/store/g, apiUrl.toString()+'/store');
			var assets =parse(urlfix);
		}
	}catch(e){
		log.error(" " + e);
		error.push({"errorMessage":e.message});
	}
}else{
	try{
		var assetJSON = get(apiUrl+'/store/apis/v2/assets/cartridge/search/'+csearchString, data, header);
		
		if(assetJSON.xhr.status == '401'){
			log.error( "Store Error: Unauthorized access to Cartridge Store");
			error.push({"errorMessage":"Unauthorized access to Cartridge Store"});
		}else{
			//fixing any tab issues encounter
			var tabfix = assetJSON.data.replace(/\t/g, '');
			//adding URL to JSON data
			var urlfix = tabfix.replace(/\/store/g, apiUrl.toString()+'/store');
			assets =parse(urlfix);
		}
	}catch(e){
		log.error(" " + e);
		error.push({"errorMessage":e.message});
	}
}


var	pmdata={};

try{
	var puppetJSON = get(pmUrl+'/modules/list?packagetype='+packageType, pmdata, pmheader);
		if(puppetJSON.xhr.status == '404'){
			log.error( "Agent Error: " + packageType + " Package type not found");
			error.push({"errorMessage":"Package type not found on server"});
		}else if(puppetJSON.xhr.status == '401'){
			log.error( "Agent Error: Unauthorized access to Agent");
			error.push({"errorMessage":"Unauthorized access to Agent"});
		}
}catch(e){
		log.error(" " + e);
		error.push({"errorMessage":e.message});
}

if(error.length==0){
	print({"store_data":assets, "puppet_data": parse(puppetJSON.data) , "errorMessage": ''});	
}else{
	print(error);	
}
%>