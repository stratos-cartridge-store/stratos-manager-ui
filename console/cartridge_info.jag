<%
/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */
var caramel = require('caramel');
var error = [];
var utils = require('/util/utility.jag');
 var log = new Log('utility.cartridgeInfo');
var alias = request.getParameter("alias");
var lbCluster = {};
var cartridgeInfo = utils.consoleAppUtil.getCartridgeInfo(alias);

if(cartridgeInfo.Error != undefined){
    error.push(cartridgeInfo.Error);
}else{
    if(cartridgeInfo.cartridge == undefined){
        cartridgeInfo.cartridge = cartridgeInfo;
    }
    if(cartridgeInfo.cartridge.lbClusterId) {
        lbCluster = utils.consoleAppUtil.getClusterInfo(cartridgeInfo.cartridge.lbClusterId);
        if(lbCluster.Error != undefined){
            error.push(lbCluster.Error);
        }
    }
    var clusterInfo = utils.consoleAppUtil.getClusterInfoWithAlias(cartridgeInfo.cartridge.cartridgeType, alias);
    if(clusterInfo.Error != undefined){
        error.push(clusterInfo.Error);
    }
}
caramel.render({
    cartridgeInfo:cartridgeInfo,
    lbCluster:lbCluster,
    clusterInfo:clusterInfo,
    error:error
});
%>
