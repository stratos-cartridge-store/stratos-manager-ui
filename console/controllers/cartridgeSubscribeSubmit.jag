<%
/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

(function(){
    var log = new Log("controller.cartridgeSubscribeSubmit");
    var utils = require('/util/utility.jag');
    var jsonRequest = {};
    jsonRequest = {};
    var cartridgeType = request.getParameter('cartridgeType');
    var alias = request.getParameter('alias');
    var repoURL = request.getParameter('repoURL');
    var isPublicRepo = request.getParameter('isPublicRepo');
    var repoUsername = request.getParameter('repoUsername');
    var repoPassword = request.getParameter('repoPassword');
    var autoscalePolicy = request.getParameter('autoscalePolicy');
    var deploymentPolicy = request.getParameter('deploymentPolicy');
    var size = request.getParameter('size');
    var removeontermination = request.getParameter('removeOnUnsubscription');
    var persistencerequired = request.getParameter('persistencerequired');
    var commitsEnabled = request.getParameter('commitsEnabled');

    if(persistencerequired == "on"){
        persistencerequired = true;
    } else {
        persistencerequired = false;
    }

    if(commitsEnabled == "on"){
        commitsEnabled = true;
    } else {
        commitsEnabled = false;
    }

    if(removeontermination == "on"){
        removeontermination = true;
    } else {
        removeontermination = false;
    }
    // constructing the json request
    jsonRequest.cartridgeType = cartridgeType;
    jsonRequest.alias = alias;
    jsonRequest.repoURL = repoURL;
    jsonRequest.privateRepo = !isPublicRepo;
    if(!isPublicRepo){
        jsonRequest.repoUsername = repoUsername;
        jsonRequest.repoPassword = repoPassword;

    }
    jsonRequest.autoscalePolicy = autoscalePolicy;
    jsonRequest.deploymentPolicy = deploymentPolicy;
    if (size != null && size != ""){
        jsonRequest.size = size;
    }
    jsonRequest.persistanceRequired = persistencerequired;
    jsonRequest.commitsEnabled = commitsEnabled;
    jsonRequest.removeOnTermination = removeontermination;


    var result = utils.consoleAppUtil.subscribeToCartridge(jsonRequest);
    response.sendRedirect(request.getContextPath() + '/index.jag');
}());
%>
