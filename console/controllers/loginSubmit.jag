<%
/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */
(function(){
    var log = new Log("controller.credentialSubmit");
    var utils = require('/util/utility.jag');
    var carbon = require('carbon');
    var server = new carbon.server.Server();
    //TODO: handle the angry path...
    var username = request.getParameter("username").trim();
    var password = request.getParameter("password"); // not trimming the password
    if(username || password){
        session.put("error","Enter your username and password.");
    }
    //authenticate with carbon usr-store


    try{
        var auth = server.authenticate(username, password);

        if(!auth){
            session.put("error","The username or password you entered is incorrect.");
        }else{
            var userObject = carbon.server.tenantUser(username);
            var um = new carbon.user.UserManager({}, userObject.tenantId);
            var user = um.getUser(userObject.username);
            var roles = user.getRoles();
            //storing in session
            session.put("USER_NAME",username);
            session.put("TENANT_DOMAIN",userObject.domain);
            session.put("ROLE_ARRAY",roles);
            //call the authentication rest-endpoint and get the JSESSION_ID
            var result =  utils.consoleAppUtil.getSessionCookie(username,password);
            //TODO: handle the error scenario
            //save the JSESSION_ID in current console.session.
            var jSessionId = result.data.Success.sessionId;
            session.put("JSESSIONID",jSessionId);
            require('console').server.current(session,username);
            //redirect
        }
        response.sendRedirect(request.getContextPath()+'/index.jag');
    }catch (e){
        session.put("error",e.toString());
        response.sendRedirect(request.getContextPath()+'/index.jag');
    }

}());
%>
